a) 
    p2-1 will benefit from an always-taken prediction policy while 
    p2-2 benefits from an always not taken prediction policy.
    
b)  
    in p2-1: 
        with an always-taken policy, pc can jump to addi(line 14) immediately after benz instruction

    in p2-2: 
        with an always-not taken policy, pc will read line 13(j instruction) and jump to addi (line8)

    with out the prediction policy, cpu need to wait for the result of bnez and two NOP instruction needs
    to be inserted. even with an wrong prediction we will not get a worse result than wait for the result

c) when the prediction is wrong, the prefetched instruction needs to be thrown, so at least two cycle 
will be wasted, and it will take more than one cycle.